#include <GL/glut.h>

// Recursive function to generate the Koch curve
void drawKochCurve(float x1, float y1, float x2, float y2, int iterations)
{
    if (iterations == 0)
    {
        // Base case: draw a line segment
        glBegin(GL_LINES);
        glVertex2f(x1, y1);
        glVertex2f(x2, y2);
        glEnd();
    }
    else
    {
        // Recursive case: divide the line segment into four parts
        float deltaX = (x2 - x1) / 3;
        float deltaY = (y2 - y1) / 3;

        float xA = x1 + deltaX;
        float yA = y1 + deltaY;

        float xB = x1 + 2 * deltaX;
        float yB = y1 + 2 * deltaY;

        float xC = xA + (xB - xA) * 0.5 - (yB - yA) * 0.866;
        float yC = yA + (xB - xA) * 0.866 + (yB - yA) * 0.5;

        drawKochCurve(x1, y1, xA, yA, iterations - 1);
        drawKochCurve(xA, yA, xC, yC, iterations - 1);
        drawKochCurve(xC, yC, xB, yB, iterations - 1);
        drawKochCurve(xB, yB, x2, y2, iterations - 1);
    }
}

// Display callback function
void display()
{
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(1.0, 1.0, 1.0); // Set color to white

    // Set up the initial line segment for the Koch curve
    float x1 = -0.5;
    float y1 = -0.25;
    float x2 = 0.5;
    float y2 = -0.25;

    int iterations = 4; // Number of iterations to generate the Koch curve

    // Draw the Koch curve
    drawKochCurve(x1, y1, x2, y2, iterations);

    glFlush();
}

int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500, 500);
    glutCreateWindow("Koch Curve");
    glClearColor(0.0, 0.0, 0.0, 1.0); // Set clear color to black
    gluOrtho2D(-1.0, 1.0, -1.0, 1.0); // Set the orthogonal view

    glutDisplayFunc(display);
    glutMainLoop();

    return 0;
}

